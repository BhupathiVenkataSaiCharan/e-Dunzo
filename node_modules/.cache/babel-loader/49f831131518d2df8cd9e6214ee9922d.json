{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nimport { getjQuery } from '../util/index';\nimport { defaultPreventedPreservedOnDispatch } from './polyfill';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst $ = getjQuery();\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\nconst stripNameRegex = /\\..*/;\nconst stripUidRegex = /::\\d+$/;\nconst eventRegistry = {}; // Events storage\n\nlet uidEvent = 1;\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n};\nconst nativeEvents = ['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll'];\n/**\n * ------------------------------------------------------------------------\n * Private methods\n * ------------------------------------------------------------------------\n */\n\nfunction getUidEvent(element, uid) {\n  return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n}\n\nfunction getEvent(element) {\n  const uid = getUidEvent(element);\n  element.uidEvent = uid;\n  eventRegistry[uid] = eventRegistry[uid] || {};\n  return eventRegistry[uid];\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn);\n    }\n\n    return fn.apply(element, [event]);\n  };\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector);\n\n    for (let {\n      target\n    } = event; target && target !== this; target = target.parentNode) {\n      for (let i = domElements.length; i--;) {\n        if (domElements[i] === target) {\n          if (handler.oneOff) {\n            EventHandler.off(element, event.type, fn);\n          }\n\n          return fn.apply(target, [event]);\n        }\n      }\n    } // To please ESLint\n\n\n    return null;\n  };\n}\n\nfunction findHandler(events, handler, delegationSelector = null) {\n  const uidEventList = Object.keys(events);\n\n  for (let i = 0, len = uidEventList.length; i < len; i++) {\n    const event = events[uidEventList[i]];\n\n    if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {\n      return event;\n    }\n  }\n\n  return null;\n}\n\nfunction normalizeParams(originalTypeEvent, handler, delegationFn) {\n  const delegation = typeof handler === 'string';\n  const originalHandler = delegation ? delegationFn : handler; // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n\n  let typeEvent = originalTypeEvent.replace(stripNameRegex, '');\n  const custom = customEvents[typeEvent];\n\n  if (custom) {\n    typeEvent = custom;\n  }\n\n  const isNative = nativeEvents.indexOf(typeEvent) > -1;\n\n  if (!isNative) {\n    typeEvent = originalTypeEvent;\n  }\n\n  return [delegation, originalHandler, typeEvent];\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return;\n  }\n\n  if (!handler) {\n    handler = delegationFn;\n    delegationFn = null;\n  }\n\n  const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);\n  const events = getEvent(element);\n  const handlers = events[typeEvent] || (events[typeEvent] = {});\n  const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null);\n\n  if (previousFn) {\n    previousFn.oneOff = previousFn.oneOff && oneOff;\n    return;\n  }\n\n  const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''));\n  const fn = delegation ? bootstrapDelegationHandler(element, handler, delegationFn) : bootstrapHandler(element, handler);\n  fn.delegationSelector = delegation ? handler : null;\n  fn.originalHandler = originalHandler;\n  fn.oneOff = oneOff;\n  fn.uidEvent = uid;\n  handlers[uid] = fn;\n  element.addEventListener(typeEvent, fn, delegation);\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector);\n\n  if (!fn) {\n    return;\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n  delete events[typeEvent][fn.uidEvent];\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {};\n  Object.keys(storeElementEvent).forEach(handlerKey => {\n    if (handlerKey.indexOf(namespace) > -1) {\n      const event = storeElementEvent[handlerKey];\n      removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\n    }\n  });\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, false);\n  },\n\n  one(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, true);\n  },\n\n  off(element, originalTypeEvent, handler, delegationFn) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n\n    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);\n    const inNamespace = typeEvent !== originalTypeEvent;\n    const events = getEvent(element);\n    const isNamespace = originalTypeEvent.charAt(0) === '.';\n\n    if (typeof originalHandler !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!events || !events[typeEvent]) {\n        return;\n      }\n\n      removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null);\n      return;\n    }\n\n    if (isNamespace) {\n      Object.keys(events).forEach(elementEvent => {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n      });\n    }\n\n    const storeElementEvent = events[typeEvent] || {};\n    Object.keys(storeElementEvent).forEach(keyHandlers => {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '');\n\n      if (!inNamespace || originalTypeEvent.indexOf(handlerKey) > -1) {\n        const event = storeElementEvent[keyHandlers];\n        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\n      }\n    });\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null;\n    }\n\n    const typeEvent = event.replace(stripNameRegex, '');\n    const inNamespace = event !== typeEvent;\n    const isNative = nativeEvents.indexOf(typeEvent) > -1;\n    let jQueryEvent;\n    let bubbles = true;\n    let nativeDispatch = true;\n    let defaultPrevented = false;\n    let evt = null;\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args);\n      $(element).trigger(jQueryEvent);\n      bubbles = !jQueryEvent.isPropagationStopped();\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n      defaultPrevented = jQueryEvent.isDefaultPrevented();\n    }\n\n    if (isNative) {\n      evt = document.createEvent('HTMLEvents');\n      evt.initEvent(typeEvent, bubbles, true);\n    } else {\n      evt = new CustomEvent(event, {\n        bubbles,\n        cancelable: true\n      });\n    } // merge custom informations in our event\n\n\n    if (typeof args !== 'undefined') {\n      Object.keys(args).forEach(key => {\n        Object.defineProperty(evt, key, {\n          get() {\n            return args[key];\n          }\n\n        });\n      });\n    }\n\n    if (defaultPrevented) {\n      evt.preventDefault();\n\n      if (!defaultPreventedPreservedOnDispatch) {\n        Object.defineProperty(evt, 'defaultPrevented', {\n          get: () => true\n        });\n      }\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt);\n    }\n\n    if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {\n      jQueryEvent.preventDefault();\n    }\n\n    return evt;\n  }\n\n};\nexport default EventHandler;","map":{"version":3,"sources":["E:/reactjs/node_modules/bootstrap/js/src/dom/event-handler.js"],"names":["getjQuery","defaultPreventedPreservedOnDispatch","$","namespaceRegex","stripNameRegex","stripUidRegex","eventRegistry","uidEvent","customEvents","mouseenter","mouseleave","nativeEvents","getUidEvent","element","uid","getEvent","bootstrapHandler","fn","handler","event","oneOff","EventHandler","off","type","apply","bootstrapDelegationHandler","selector","domElements","querySelectorAll","target","parentNode","i","length","findHandler","events","delegationSelector","uidEventList","Object","keys","len","originalHandler","normalizeParams","originalTypeEvent","delegationFn","delegation","typeEvent","replace","custom","isNative","indexOf","addHandler","handlers","previousFn","addEventListener","removeHandler","removeEventListener","Boolean","removeNamespacedHandlers","namespace","storeElementEvent","forEach","handlerKey","on","one","inNamespace","isNamespace","charAt","elementEvent","slice","keyHandlers","trigger","args","jQueryEvent","bubbles","nativeDispatch","defaultPrevented","evt","Event","isPropagationStopped","isImmediatePropagationStopped","isDefaultPrevented","document","createEvent","initEvent","CustomEvent","cancelable","key","defineProperty","get","preventDefault","dispatchEvent"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,eAA1B;AACA,SAASC,mCAAT,QAAoD,YAApD;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,CAAC,GAAGF,SAAS,EAAnB;AACA,MAAMG,cAAc,GAAG,oBAAvB;AACA,MAAMC,cAAc,GAAG,MAAvB;AACA,MAAMC,aAAa,GAAG,QAAtB;AACA,MAAMC,aAAa,GAAG,EAAtB,C,CAAyB;;AACzB,IAAIC,QAAQ,GAAG,CAAf;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,WADO;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAIA,MAAMC,YAAY,GAAG,CACnB,OADmB,EAEnB,UAFmB,EAGnB,SAHmB,EAInB,WAJmB,EAKnB,aALmB,EAMnB,YANmB,EAOnB,gBAPmB,EAQnB,WARmB,EASnB,UATmB,EAUnB,WAVmB,EAWnB,aAXmB,EAYnB,WAZmB,EAanB,SAbmB,EAcnB,UAdmB,EAenB,OAfmB,EAgBnB,mBAhBmB,EAiBnB,YAjBmB,EAkBnB,WAlBmB,EAmBnB,UAnBmB,EAoBnB,aApBmB,EAqBnB,aArBmB,EAsBnB,aAtBmB,EAuBnB,WAvBmB,EAwBnB,cAxBmB,EAyBnB,eAzBmB,EA0BnB,cA1BmB,EA2BnB,eA3BmB,EA4BnB,YA5BmB,EA6BnB,OA7BmB,EA8BnB,MA9BmB,EA+BnB,QA/BmB,EAgCnB,OAhCmB,EAiCnB,QAjCmB,EAkCnB,QAlCmB,EAmCnB,SAnCmB,EAoCnB,UApCmB,EAqCnB,MArCmB,EAsCnB,QAtCmB,EAuCnB,cAvCmB,EAwCnB,QAxCmB,EAyCnB,MAzCmB,EA0CnB,kBA1CmB,EA2CnB,kBA3CmB,EA4CnB,OA5CmB,EA6CnB,OA7CmB,EA8CnB,QA9CmB,CAArB;AAiDA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,GAA9B,EAAmC;AACjC,SAAQA,GAAG,IAAK,GAAEA,GAAI,KAAIP,QAAQ,EAAG,EAA9B,IAAoCM,OAAO,CAACN,QAA5C,IAAwDA,QAAQ,EAAvE;AACD;;AAED,SAASQ,QAAT,CAAkBF,OAAlB,EAA2B;AACzB,QAAMC,GAAG,GAAGF,WAAW,CAACC,OAAD,CAAvB;AAEAA,EAAAA,OAAO,CAACN,QAAR,GAAmBO,GAAnB;AACAR,EAAAA,aAAa,CAACQ,GAAD,CAAb,GAAqBR,aAAa,CAACQ,GAAD,CAAb,IAAsB,EAA3C;AAEA,SAAOR,aAAa,CAACQ,GAAD,CAApB;AACD;;AAED,SAASE,gBAAT,CAA0BH,OAA1B,EAAmCI,EAAnC,EAAuC;AACrC,SAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,QAAID,OAAO,CAACE,MAAZ,EAAoB;AAClBC,MAAAA,YAAY,CAACC,GAAb,CAAiBT,OAAjB,EAA0BM,KAAK,CAACI,IAAhC,EAAsCN,EAAtC;AACD;;AAED,WAAOA,EAAE,CAACO,KAAH,CAASX,OAAT,EAAkB,CAACM,KAAD,CAAlB,CAAP;AACD,GAND;AAOD;;AAED,SAASM,0BAAT,CAAoCZ,OAApC,EAA6Ca,QAA7C,EAAuDT,EAAvD,EAA2D;AACzD,SAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,UAAMQ,WAAW,GAAGd,OAAO,CAACe,gBAAR,CAAyBF,QAAzB,CAApB;;AAEA,SAAK,IAAI;AAAEG,MAAAA;AAAF,QAAaV,KAAtB,EAA6BU,MAAM,IAAIA,MAAM,KAAK,IAAlD,EAAwDA,MAAM,GAAGA,MAAM,CAACC,UAAxE,EAAoF;AAClF,WAAK,IAAIC,CAAC,GAAGJ,WAAW,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,GAAuC;AACrC,YAAIJ,WAAW,CAACI,CAAD,CAAX,KAAmBF,MAAvB,EAA+B;AAC7B,cAAIX,OAAO,CAACE,MAAZ,EAAoB;AAClBC,YAAAA,YAAY,CAACC,GAAb,CAAiBT,OAAjB,EAA0BM,KAAK,CAACI,IAAhC,EAAsCN,EAAtC;AACD;;AAED,iBAAOA,EAAE,CAACO,KAAH,CAASK,MAAT,EAAiB,CAACV,KAAD,CAAjB,CAAP;AACD;AACF;AACF,KAb4B,CAe7B;;;AACA,WAAO,IAAP;AACD,GAjBD;AAkBD;;AAED,SAASc,WAAT,CAAqBC,MAArB,EAA6BhB,OAA7B,EAAsCiB,kBAAkB,GAAG,IAA3D,EAAiE;AAC/D,QAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAArB;;AAEA,OAAK,IAAIH,CAAC,GAAG,CAAR,EAAWQ,GAAG,GAAGH,YAAY,CAACJ,MAAnC,EAA2CD,CAAC,GAAGQ,GAA/C,EAAoDR,CAAC,EAArD,EAAyD;AACvD,UAAMZ,KAAK,GAAGe,MAAM,CAACE,YAAY,CAACL,CAAD,CAAb,CAApB;;AAEA,QAAIZ,KAAK,CAACqB,eAAN,KAA0BtB,OAA1B,IAAqCC,KAAK,CAACgB,kBAAN,KAA6BA,kBAAtE,EAA0F;AACxF,aAAOhB,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAED,SAASsB,eAAT,CAAyBC,iBAAzB,EAA4CxB,OAA5C,EAAqDyB,YAArD,EAAmE;AACjE,QAAMC,UAAU,GAAG,OAAO1B,OAAP,KAAmB,QAAtC;AACA,QAAMsB,eAAe,GAAGI,UAAU,GAAGD,YAAH,GAAkBzB,OAApD,CAFiE,CAIjE;;AACA,MAAI2B,SAAS,GAAGH,iBAAiB,CAACI,OAAlB,CAA0B1C,cAA1B,EAA0C,EAA1C,CAAhB;AACA,QAAM2C,MAAM,GAAGvC,YAAY,CAACqC,SAAD,CAA3B;;AAEA,MAAIE,MAAJ,EAAY;AACVF,IAAAA,SAAS,GAAGE,MAAZ;AACD;;AAED,QAAMC,QAAQ,GAAGrC,YAAY,CAACsC,OAAb,CAAqBJ,SAArB,IAAkC,CAAC,CAApD;;AAEA,MAAI,CAACG,QAAL,EAAe;AACbH,IAAAA,SAAS,GAAGH,iBAAZ;AACD;;AAED,SAAO,CAACE,UAAD,EAAaJ,eAAb,EAA8BK,SAA9B,CAAP;AACD;;AAED,SAASK,UAAT,CAAoBrC,OAApB,EAA6B6B,iBAA7B,EAAgDxB,OAAhD,EAAyDyB,YAAzD,EAAuEvB,MAAvE,EAA+E;AAC7E,MAAI,OAAOsB,iBAAP,KAA6B,QAA7B,IAAyC,CAAC7B,OAA9C,EAAuD;AACrD;AACD;;AAED,MAAI,CAACK,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAGyB,YAAV;AACAA,IAAAA,YAAY,GAAG,IAAf;AACD;;AAED,QAAM,CAACC,UAAD,EAAaJ,eAAb,EAA8BK,SAA9B,IAA2CJ,eAAe,CAACC,iBAAD,EAAoBxB,OAApB,EAA6ByB,YAA7B,CAAhE;AACA,QAAMT,MAAM,GAAGnB,QAAQ,CAACF,OAAD,CAAvB;AACA,QAAMsC,QAAQ,GAAGjB,MAAM,CAACW,SAAD,CAAN,KAAsBX,MAAM,CAACW,SAAD,CAAN,GAAoB,EAA1C,CAAjB;AACA,QAAMO,UAAU,GAAGnB,WAAW,CAACkB,QAAD,EAAWX,eAAX,EAA4BI,UAAU,GAAG1B,OAAH,GAAa,IAAnD,CAA9B;;AAEA,MAAIkC,UAAJ,EAAgB;AACdA,IAAAA,UAAU,CAAChC,MAAX,GAAoBgC,UAAU,CAAChC,MAAX,IAAqBA,MAAzC;AAEA;AACD;;AAED,QAAMN,GAAG,GAAGF,WAAW,CAAC4B,eAAD,EAAkBE,iBAAiB,CAACI,OAAlB,CAA0B3C,cAA1B,EAA0C,EAA1C,CAAlB,CAAvB;AACA,QAAMc,EAAE,GAAG2B,UAAU,GACnBnB,0BAA0B,CAACZ,OAAD,EAAUK,OAAV,EAAmByB,YAAnB,CADP,GAEnB3B,gBAAgB,CAACH,OAAD,EAAUK,OAAV,CAFlB;AAIAD,EAAAA,EAAE,CAACkB,kBAAH,GAAwBS,UAAU,GAAG1B,OAAH,GAAa,IAA/C;AACAD,EAAAA,EAAE,CAACuB,eAAH,GAAqBA,eAArB;AACAvB,EAAAA,EAAE,CAACG,MAAH,GAAYA,MAAZ;AACAH,EAAAA,EAAE,CAACV,QAAH,GAAcO,GAAd;AACAqC,EAAAA,QAAQ,CAACrC,GAAD,CAAR,GAAgBG,EAAhB;AAEAJ,EAAAA,OAAO,CAACwC,gBAAR,CAAyBR,SAAzB,EAAoC5B,EAApC,EAAwC2B,UAAxC;AACD;;AAED,SAASU,aAAT,CAAuBzC,OAAvB,EAAgCqB,MAAhC,EAAwCW,SAAxC,EAAmD3B,OAAnD,EAA4DiB,kBAA5D,EAAgF;AAC9E,QAAMlB,EAAE,GAAGgB,WAAW,CAACC,MAAM,CAACW,SAAD,CAAP,EAAoB3B,OAApB,EAA6BiB,kBAA7B,CAAtB;;AAEA,MAAI,CAAClB,EAAL,EAAS;AACP;AACD;;AAEDJ,EAAAA,OAAO,CAAC0C,mBAAR,CAA4BV,SAA5B,EAAuC5B,EAAvC,EAA2CuC,OAAO,CAACrB,kBAAD,CAAlD;AACA,SAAOD,MAAM,CAACW,SAAD,CAAN,CAAkB5B,EAAE,CAACV,QAArB,CAAP;AACD;;AAED,SAASkD,wBAAT,CAAkC5C,OAAlC,EAA2CqB,MAA3C,EAAmDW,SAAnD,EAA8Da,SAA9D,EAAyE;AACvE,QAAMC,iBAAiB,GAAGzB,MAAM,CAACW,SAAD,CAAN,IAAqB,EAA/C;AAEAR,EAAAA,MAAM,CAACC,IAAP,CAAYqB,iBAAZ,EACGC,OADH,CACWC,UAAU,IAAI;AACrB,QAAIA,UAAU,CAACZ,OAAX,CAAmBS,SAAnB,IAAgC,CAAC,CAArC,EAAwC;AACtC,YAAMvC,KAAK,GAAGwC,iBAAiB,CAACE,UAAD,CAA/B;AAEAP,MAAAA,aAAa,CAACzC,OAAD,EAAUqB,MAAV,EAAkBW,SAAlB,EAA6B1B,KAAK,CAACqB,eAAnC,EAAoDrB,KAAK,CAACgB,kBAA1D,CAAb;AACD;AACF,GAPH;AAQD;;AAED,MAAMd,YAAY,GAAG;AACnByC,EAAAA,EAAE,CAACjD,OAAD,EAAUM,KAAV,EAAiBD,OAAjB,EAA0ByB,YAA1B,EAAwC;AACxCO,IAAAA,UAAU,CAACrC,OAAD,EAAUM,KAAV,EAAiBD,OAAjB,EAA0ByB,YAA1B,EAAwC,KAAxC,CAAV;AACD,GAHkB;;AAKnBoB,EAAAA,GAAG,CAAClD,OAAD,EAAUM,KAAV,EAAiBD,OAAjB,EAA0ByB,YAA1B,EAAwC;AACzCO,IAAAA,UAAU,CAACrC,OAAD,EAAUM,KAAV,EAAiBD,OAAjB,EAA0ByB,YAA1B,EAAwC,IAAxC,CAAV;AACD,GAPkB;;AASnBrB,EAAAA,GAAG,CAACT,OAAD,EAAU6B,iBAAV,EAA6BxB,OAA7B,EAAsCyB,YAAtC,EAAoD;AACrD,QAAI,OAAOD,iBAAP,KAA6B,QAA7B,IAAyC,CAAC7B,OAA9C,EAAuD;AACrD;AACD;;AAED,UAAM,CAAC+B,UAAD,EAAaJ,eAAb,EAA8BK,SAA9B,IAA2CJ,eAAe,CAACC,iBAAD,EAAoBxB,OAApB,EAA6ByB,YAA7B,CAAhE;AACA,UAAMqB,WAAW,GAAGnB,SAAS,KAAKH,iBAAlC;AACA,UAAMR,MAAM,GAAGnB,QAAQ,CAACF,OAAD,CAAvB;AACA,UAAMoD,WAAW,GAAGvB,iBAAiB,CAACwB,MAAlB,CAAyB,CAAzB,MAAgC,GAApD;;AAEA,QAAI,OAAO1B,eAAP,KAA2B,WAA/B,EAA4C;AAC1C;AACA,UAAI,CAACN,MAAD,IAAW,CAACA,MAAM,CAACW,SAAD,CAAtB,EAAmC;AACjC;AACD;;AAEDS,MAAAA,aAAa,CAACzC,OAAD,EAAUqB,MAAV,EAAkBW,SAAlB,EAA6BL,eAA7B,EAA8CI,UAAU,GAAG1B,OAAH,GAAa,IAArE,CAAb;AACA;AACD;;AAED,QAAI+C,WAAJ,EAAiB;AACf5B,MAAAA,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EACG0B,OADH,CACWO,YAAY,IAAI;AACvBV,QAAAA,wBAAwB,CAAC5C,OAAD,EAAUqB,MAAV,EAAkBiC,YAAlB,EAAgCzB,iBAAiB,CAAC0B,KAAlB,CAAwB,CAAxB,CAAhC,CAAxB;AACD,OAHH;AAID;;AAED,UAAMT,iBAAiB,GAAGzB,MAAM,CAACW,SAAD,CAAN,IAAqB,EAA/C;AACAR,IAAAA,MAAM,CAACC,IAAP,CAAYqB,iBAAZ,EACGC,OADH,CACWS,WAAW,IAAI;AACtB,YAAMR,UAAU,GAAGQ,WAAW,CAACvB,OAAZ,CAAoBzC,aAApB,EAAmC,EAAnC,CAAnB;;AAEA,UAAI,CAAC2D,WAAD,IAAgBtB,iBAAiB,CAACO,OAAlB,CAA0BY,UAA1B,IAAwC,CAAC,CAA7D,EAAgE;AAC9D,cAAM1C,KAAK,GAAGwC,iBAAiB,CAACU,WAAD,CAA/B;AAEAf,QAAAA,aAAa,CAACzC,OAAD,EAAUqB,MAAV,EAAkBW,SAAlB,EAA6B1B,KAAK,CAACqB,eAAnC,EAAoDrB,KAAK,CAACgB,kBAA1D,CAAb;AACD;AACF,KATH;AAUD,GA/CkB;;AAiDnBmC,EAAAA,OAAO,CAACzD,OAAD,EAAUM,KAAV,EAAiBoD,IAAjB,EAAuB;AAC5B,QAAI,OAAOpD,KAAP,KAAiB,QAAjB,IAA6B,CAACN,OAAlC,EAA2C;AACzC,aAAO,IAAP;AACD;;AAED,UAAMgC,SAAS,GAAG1B,KAAK,CAAC2B,OAAN,CAAc1C,cAAd,EAA8B,EAA9B,CAAlB;AACA,UAAM4D,WAAW,GAAG7C,KAAK,KAAK0B,SAA9B;AACA,UAAMG,QAAQ,GAAGrC,YAAY,CAACsC,OAAb,CAAqBJ,SAArB,IAAkC,CAAC,CAApD;AAEA,QAAI2B,WAAJ;AACA,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIC,cAAc,GAAG,IAArB;AACA,QAAIC,gBAAgB,GAAG,KAAvB;AACA,QAAIC,GAAG,GAAG,IAAV;;AAEA,QAAIZ,WAAW,IAAI9D,CAAnB,EAAsB;AACpBsE,MAAAA,WAAW,GAAGtE,CAAC,CAAC2E,KAAF,CAAQ1D,KAAR,EAAeoD,IAAf,CAAd;AAEArE,MAAAA,CAAC,CAACW,OAAD,CAAD,CAAWyD,OAAX,CAAmBE,WAAnB;AACAC,MAAAA,OAAO,GAAG,CAACD,WAAW,CAACM,oBAAZ,EAAX;AACAJ,MAAAA,cAAc,GAAG,CAACF,WAAW,CAACO,6BAAZ,EAAlB;AACAJ,MAAAA,gBAAgB,GAAGH,WAAW,CAACQ,kBAAZ,EAAnB;AACD;;AAED,QAAIhC,QAAJ,EAAc;AACZ4B,MAAAA,GAAG,GAAGK,QAAQ,CAACC,WAAT,CAAqB,YAArB,CAAN;AACAN,MAAAA,GAAG,CAACO,SAAJ,CAActC,SAAd,EAAyB4B,OAAzB,EAAkC,IAAlC;AACD,KAHD,MAGO;AACLG,MAAAA,GAAG,GAAG,IAAIQ,WAAJ,CAAgBjE,KAAhB,EAAuB;AAC3BsD,QAAAA,OAD2B;AAE3BY,QAAAA,UAAU,EAAE;AAFe,OAAvB,CAAN;AAID,KAhC2B,CAkC5B;;;AACA,QAAI,OAAOd,IAAP,KAAgB,WAApB,EAAiC;AAC/BlC,MAAAA,MAAM,CAACC,IAAP,CAAYiC,IAAZ,EACGX,OADH,CACW0B,GAAG,IAAI;AACdjD,QAAAA,MAAM,CAACkD,cAAP,CAAsBX,GAAtB,EAA2BU,GAA3B,EAAgC;AAC9BE,UAAAA,GAAG,GAAG;AACJ,mBAAOjB,IAAI,CAACe,GAAD,CAAX;AACD;;AAH6B,SAAhC;AAKD,OAPH;AAQD;;AAED,QAAIX,gBAAJ,EAAsB;AACpBC,MAAAA,GAAG,CAACa,cAAJ;;AAEA,UAAI,CAACxF,mCAAL,EAA0C;AACxCoC,QAAAA,MAAM,CAACkD,cAAP,CAAsBX,GAAtB,EAA2B,kBAA3B,EAA+C;AAC7CY,UAAAA,GAAG,EAAE,MAAM;AADkC,SAA/C;AAGD;AACF;;AAED,QAAId,cAAJ,EAAoB;AAClB7D,MAAAA,OAAO,CAAC6E,aAAR,CAAsBd,GAAtB;AACD;;AAED,QAAIA,GAAG,CAACD,gBAAJ,IAAwB,OAAOH,WAAP,KAAuB,WAAnD,EAAgE;AAC9DA,MAAAA,WAAW,CAACiB,cAAZ;AACD;;AAED,WAAOb,GAAP;AACD;;AAlHkB,CAArB;AAqHA,eAAevD,YAAf","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index'\nimport { defaultPreventedPreservedOnDispatch } from './polyfill'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst $ = getjQuery()\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\nconst nativeEvents = [\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n]\n\n/**\n * ------------------------------------------------------------------------\n * Private methods\n * ------------------------------------------------------------------------\n */\n\nfunction getUidEvent(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getEvent(element) {\n  const uid = getUidEvent(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (let i = domElements.length; i--;) {\n        if (domElements[i] === target) {\n          if (handler.oneOff) {\n            EventHandler.off(element, event.type, fn)\n          }\n\n          return fn.apply(target, [event])\n        }\n      }\n    }\n\n    // To please ESLint\n    return null\n  }\n}\n\nfunction findHandler(events, handler, delegationSelector = null) {\n  const uidEventList = Object.keys(events)\n\n  for (let i = 0, len = uidEventList.length; i < len; i++) {\n    const event = events[uidEventList[i]]\n\n    if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {\n      return event\n    }\n  }\n\n  return null\n}\n\nfunction normalizeParams(originalTypeEvent, handler, delegationFn) {\n  const delegation = typeof handler === 'string'\n  const originalHandler = delegation ? delegationFn : handler\n\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  let typeEvent = originalTypeEvent.replace(stripNameRegex, '')\n  const custom = customEvents[typeEvent]\n\n  if (custom) {\n    typeEvent = custom\n  }\n\n  const isNative = nativeEvents.indexOf(typeEvent) > -1\n\n  if (!isNative) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [delegation, originalHandler, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  if (!handler) {\n    handler = delegationFn\n    delegationFn = null\n  }\n\n  const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn)\n  const events = getEvent(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null)\n\n  if (previousFn) {\n    previousFn.oneOff = previousFn.oneOff && oneOff\n\n    return\n  }\n\n  const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = delegation ?\n    bootstrapDelegationHandler(element, handler, delegationFn) :\n    bootstrapHandler(element, handler)\n\n  fn.delegationSelector = delegation ? handler : null\n  fn.originalHandler = originalHandler\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, delegation)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  Object.keys(storeElementEvent)\n    .forEach(handlerKey => {\n      if (handlerKey.indexOf(namespace) > -1) {\n        const event = storeElementEvent[handlerKey]\n\n        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector)\n      }\n    })\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, false)\n  },\n\n  one(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFn) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getEvent(element)\n    const isNamespace = originalTypeEvent.charAt(0) === '.'\n\n    if (typeof originalHandler !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!events || !events[typeEvent]) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      Object.keys(events)\n        .forEach(elementEvent => {\n          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n        })\n    }\n\n    const storeElementEvent = events[typeEvent] || {}\n    Object.keys(storeElementEvent)\n      .forEach(keyHandlers => {\n        const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n        if (!inNamespace || originalTypeEvent.indexOf(handlerKey) > -1) {\n          const event = storeElementEvent[keyHandlers]\n\n          removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector)\n        }\n      })\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const typeEvent = event.replace(stripNameRegex, '')\n    const inNamespace = event !== typeEvent\n    const isNative = nativeEvents.indexOf(typeEvent) > -1\n\n    let jQueryEvent\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n    let evt = null\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    if (isNative) {\n      evt = document.createEvent('HTMLEvents')\n      evt.initEvent(typeEvent, bubbles, true)\n    } else {\n      evt = new CustomEvent(event, {\n        bubbles,\n        cancelable: true\n      })\n    }\n\n    // merge custom informations in our event\n    if (typeof args !== 'undefined') {\n      Object.keys(args)\n        .forEach(key => {\n          Object.defineProperty(evt, key, {\n            get() {\n              return args[key]\n            }\n          })\n        })\n    }\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n\n      if (!defaultPreventedPreservedOnDispatch) {\n        Object.defineProperty(evt, 'defaultPrevented', {\n          get: () => true\n        })\n      }\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nexport default EventHandler\n"]},"metadata":{},"sourceType":"module"}