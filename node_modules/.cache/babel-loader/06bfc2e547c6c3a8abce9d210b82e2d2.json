{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nimport { find as findFn, findOne } from './polyfill';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NODE_TEXT = 3;\nconst SelectorEngine = {\n  matches(element, selector) {\n    return element.matches(selector);\n  },\n\n  find(selector, element = document.documentElement) {\n    return [].concat(...findFn.call(element, selector));\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return findOne.call(element, selector);\n  },\n\n  children(element, selector) {\n    const children = [].concat(...element.children);\n    return children.filter(child => child.matches(selector));\n  },\n\n  parents(element, selector) {\n    const parents = [];\n    let ancestor = element.parentNode;\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n      if (this.matches(ancestor, selector)) {\n        parents.push(ancestor);\n      }\n\n      ancestor = ancestor.parentNode;\n    }\n\n    return parents;\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling;\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous];\n      }\n\n      previous = previous.previousElementSibling;\n    }\n\n    return [];\n  },\n\n  next(element, selector) {\n    let next = element.nextElementSibling;\n\n    while (next) {\n      if (this.matches(next, selector)) {\n        return [next];\n      }\n\n      next = next.nextElementSibling;\n    }\n\n    return [];\n  }\n\n};\nexport default SelectorEngine;","map":{"version":3,"sources":["E:/reactjs/node_modules/bootstrap/js/src/dom/selector-engine.js"],"names":["find","findFn","findOne","NODE_TEXT","SelectorEngine","matches","element","selector","document","documentElement","concat","call","children","filter","child","parents","ancestor","parentNode","nodeType","Node","ELEMENT_NODE","push","prev","previous","previousElementSibling","next","nextElementSibling"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,IAAI,IAAIC,MAAjB,EAAyBC,OAAzB,QAAwC,YAAxC;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,CAAlB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,OAAO,CAACC,OAAD,EAAUC,QAAV,EAAoB;AACzB,WAAOD,OAAO,CAACD,OAAR,CAAgBE,QAAhB,CAAP;AACD,GAHoB;;AAKrBP,EAAAA,IAAI,CAACO,QAAD,EAAWD,OAAO,GAAGE,QAAQ,CAACC,eAA9B,EAA+C;AACjD,WAAO,GAAGC,MAAH,CAAU,GAAGT,MAAM,CAACU,IAAP,CAAYL,OAAZ,EAAqBC,QAArB,CAAb,CAAP;AACD,GAPoB;;AASrBL,EAAAA,OAAO,CAACK,QAAD,EAAWD,OAAO,GAAGE,QAAQ,CAACC,eAA9B,EAA+C;AACpD,WAAOP,OAAO,CAACS,IAAR,CAAaL,OAAb,EAAsBC,QAAtB,CAAP;AACD,GAXoB;;AAarBK,EAAAA,QAAQ,CAACN,OAAD,EAAUC,QAAV,EAAoB;AAC1B,UAAMK,QAAQ,GAAG,GAAGF,MAAH,CAAU,GAAGJ,OAAO,CAACM,QAArB,CAAjB;AAEA,WAAOA,QAAQ,CAACC,MAAT,CAAgBC,KAAK,IAAIA,KAAK,CAACT,OAAN,CAAcE,QAAd,CAAzB,CAAP;AACD,GAjBoB;;AAmBrBQ,EAAAA,OAAO,CAACT,OAAD,EAAUC,QAAV,EAAoB;AACzB,UAAMQ,OAAO,GAAG,EAAhB;AAEA,QAAIC,QAAQ,GAAGV,OAAO,CAACW,UAAvB;;AAEA,WAAOD,QAAQ,IAAIA,QAAQ,CAACE,QAAT,KAAsBC,IAAI,CAACC,YAAvC,IAAuDJ,QAAQ,CAACE,QAAT,KAAsBf,SAApF,EAA+F;AAC7F,UAAI,KAAKE,OAAL,CAAaW,QAAb,EAAuBT,QAAvB,CAAJ,EAAsC;AACpCQ,QAAAA,OAAO,CAACM,IAAR,CAAaL,QAAb;AACD;;AAEDA,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,UAApB;AACD;;AAED,WAAOF,OAAP;AACD,GAjCoB;;AAmCrBO,EAAAA,IAAI,CAAChB,OAAD,EAAUC,QAAV,EAAoB;AACtB,QAAIgB,QAAQ,GAAGjB,OAAO,CAACkB,sBAAvB;;AAEA,WAAOD,QAAP,EAAiB;AACf,UAAIA,QAAQ,CAAClB,OAAT,CAAiBE,QAAjB,CAAJ,EAAgC;AAC9B,eAAO,CAACgB,QAAD,CAAP;AACD;;AAEDA,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,sBAApB;AACD;;AAED,WAAO,EAAP;AACD,GA/CoB;;AAiDrBC,EAAAA,IAAI,CAACnB,OAAD,EAAUC,QAAV,EAAoB;AACtB,QAAIkB,IAAI,GAAGnB,OAAO,CAACoB,kBAAnB;;AAEA,WAAOD,IAAP,EAAa;AACX,UAAI,KAAKpB,OAAL,CAAaoB,IAAb,EAAmBlB,QAAnB,CAAJ,EAAkC;AAChC,eAAO,CAACkB,IAAD,CAAP;AACD;;AAEDA,MAAAA,IAAI,GAAGA,IAAI,CAACC,kBAAZ;AACD;;AAED,WAAO,EAAP;AACD;;AA7DoB,CAAvB;AAgEA,eAAetB,cAAf","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-alpha1): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { find as findFn, findOne } from './polyfill'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NODE_TEXT = 3\n\nconst SelectorEngine = {\n  matches(element, selector) {\n    return element.matches(selector)\n  },\n\n  find(selector, element = document.documentElement) {\n    return [].concat(...findFn.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return findOne.call(element, selector)\n  },\n\n  children(element, selector) {\n    const children = [].concat(...element.children)\n\n    return children.filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n\n    let ancestor = element.parentNode\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n      if (this.matches(ancestor, selector)) {\n        parents.push(ancestor)\n      }\n\n      ancestor = ancestor.parentNode\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (this.matches(next, selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  }\n}\n\nexport default SelectorEngine\n"]},"metadata":{},"sourceType":"module"}