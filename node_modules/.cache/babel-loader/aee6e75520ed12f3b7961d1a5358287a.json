{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\reactjs\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst App = () => {\n  _s();\n\n  let time = new Date().toLocaleTimeString();\n  const [ctime, setCtime] = useState(time);\n\n  const UpdateTime = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: ctime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: UpdateTime,\n      children: \" get time \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"10BpobSFR/hd25XWcBIcGzl2QpY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/reactjs/src/App.js"],"names":["React","useState","App","time","Date","toLocaleTimeString","ctime","setCtime","UpdateTime"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,MAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAX;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,IAAD,CAAlC;;AAEA,QAAMK,UAAU,GAAG,MAAM,CAAE,CAA3B;;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAbD;;GAAMN,G;;KAAAA,G;AAgBN,eAAeA,GAAf","sourcesContent":["import React,{useState} from 'react';\r\n\r\nconst App = () => {\r\n    let time = new Date().toLocaleTimeString();\r\n\r\n    const [ctime, setCtime] = useState(time);\r\n    \r\n    const UpdateTime = () => {};\r\n    \r\n    return(\r\n        <>\r\n            <h1>{ctime}</h1>\r\n            <button onClick={UpdateTime}> get time </button>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}